name: Admin Management Dashboard

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      action:
        description: 'Action to perform'
        required: true
        default: 'list'
        type: choice
        options:
          - list
          - stats
          - audit

jobs:
  admin-dashboard:
    name: Admin Management Dashboard
    runs-on: ubuntu-latest
    
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Firebase environment
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        run: |
          if [ -z "$FIREBASE_PROJECT_ID" ] || [ -z "$FIREBASE_CLIENT_EMAIL" ] || [ -z "$FIREBASE_PRIVATE_KEY" ]; then
            echo "❌ Required Firebase secrets not configured"
            exit 1
          fi
          echo "✅ Firebase environment configured"


      - name: Generate admin dashboard
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        run: |
          echo "🚀 Generating admin dashboard"
          echo "📍 Environment: ${{ github.event.inputs.environment }}"
          echo "🎯 Action: ${{ github.event.inputs.action }}"
          npx tsx scripts/admin-dashboard.ts "${{ github.event.inputs.action }}" >> dashboard_output.md

      - name: Upload dashboard output
        uses: actions/upload-artifact@v4
        with:
          name: admin-dashboard-${{ github.event.inputs.environment }}-${{ github.event.inputs.action }}
          path: dashboard_output.md

      - name: Display dashboard in summary
        run: |
          echo "# Admin Dashboard Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat dashboard_output.md >> $GITHUB_STEP_SUMMARY

      - name: Post-execution summary
        if: always()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY